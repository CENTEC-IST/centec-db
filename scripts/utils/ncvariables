#!/home/rmc/progs/python/anaconda3/bin/python3

import sys
import netCDF4 as nc

# CHANGE HERE
EXTRACT_VAR = {'Long Name' : 'long_name',
               'Units' : 'units'}

def print_table(header, data, spacing=3):
    sizes = []
    for i, v in enumerate(header):
        sizes.append(max(len(k[i]) for k in data+[header]))

    for i, row in enumerate([header]+data):
        if i == 1: print('-'*(sum(sizes)+len(sizes)*spacing))
        for k, value in enumerate(row):
            print(f"{value:<{sizes[k]+spacing}}", end='')
        print()


if len(sys.argv) == 1 or any(item in ("help", "-help", "--help", "-h") for item in sys.argv):
    print("""This script will print a list of variables inside a netCDF4 file.

    Usage:
        nc-variables -[vd] [nc file] [nc file] ...

    -v      Show only variables
    -d      Show only dimensions""")
    sys.exit()

files = []
var_only = False
dim_only = False
for a in sys.argv[1:]:
    if a == '-v': var_only = True
    elif a == '-d': dim_only = True
    else: files.append(a)

for f in files:
    try:
        data = nc.Dataset(f)
    except FileNotFoundError:
        print(f"File not found '{f}'")
        sys.exit(1)
    except OSError:
        print(f"File given is not a netCDF file: '{f}'")
        sys.exit(1)

    DIMENSIONS = list(data.dimensions)

    var_info = []
    dim_info = []

    for v in data.variables:
        if v in DIMENSIONS:
            d = [v, data.variables[v].units, str(len(data.variables[v]))]
            dim_info.append(d)
        else:
            d = [v]
            d.extend([data.variables[v].__dict__[key]
                if key in data.variables[v].__dict__ else ""
                for key in EXTRACT_VAR.values()])
            var_info.append(d)

    if len(files) > 1:
        print(f)
    if not dim_only:
        print('\033[1;32mVARIABLES:\033[m')
        print_table([''] + list(EXTRACT_VAR.keys()), var_info)
        print()
    if not var_only:
        print('\033[1;32mDIMENSIONS:\033[m')
        print_table(['', 'Units', 'Size'], dim_info)
